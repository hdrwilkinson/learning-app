# ==============================================
# Environment Variables Example
# ==============================================
# Copy this file to .env.local and fill in your values
# Command: cp env.example .env.local
#
# NEVER commit .env.local to git!
# ==============================================

# ----------------------------------------------
# DATABASE
# ----------------------------------------------
# PostgreSQL connection string
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
# 
# Local development example (using port 5433 to avoid conflicts):
# Replace 'your-name-here' with your macOS username (run 'whoami' to find it)
DATABASE_URL="postgresql://your-name-here@localhost:5433/learning_app_dev?schema=public"
#
# Production (Vercel Postgres, Supabase, etc.):
# DATABASE_URL="postgresql://user:password@host:5432/database?schema=public"

# ----------------------------------------------
# AUTH.JS (NextAuth.js v5)
# ----------------------------------------------
# Base URL of your application
# Local: http://localhost:3000
# Production: https://yourdomain.com
NEXTAUTH_URL="http://localhost:3000"

# Secret key for encrypting tokens and sessions
# Generate with: openssl rand -base64 32
# IMPORTANT: Use a different secret in production!
NEXTAUTH_SECRET="generate-a-secret-with-openssl-rand-base64-32"

# ----------------------------------------------
# OAUTH PROVIDERS (Optional)
# ----------------------------------------------
# Google OAuth
# Get credentials from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# GitHub OAuth
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""

# ----------------------------------------------
# API CONFIGURATION
# ----------------------------------------------
# Public API base URL (accessible from client-side)
# Local development:
NEXT_PUBLIC_API_URL="http://localhost:3000/api"
# Production:
# NEXT_PUBLIC_API_URL="https://yourdomain.com/api"

# ----------------------------------------------
# AI/LLM CONFIGURATION - Google Gemini
# ----------------------------------------------
# Google Gemini API Key (for GenAI-powered learning features)
# Get from: https://ai.google.dev/ (Google AI Studio)
GOOGLE_API_KEY=""

# Default Gemini model to use
# Recommended: gemini-2.5-flash-lite (fastest, cheapest, best for high-volume)
# Alternatives: gemini-1.5-pro (more capable for complex reasoning)
GEMINI_MODEL="gemini-2.5-flash-lite"

# Optional: Google Cloud Project ID (if using Vertex AI instead of AI Studio)
# GOOGLE_CLOUD_PROJECT=""

# ----------------------------------------------
# OPTIONAL: ANALYTICS & MONITORING
# ----------------------------------------------
# Add these when you need them:
# VERCEL_ANALYTICS_ID=""
# SENTRY_DSN=""
# POSTHOG_API_KEY=""

# ----------------------------------------------
# NODE ENVIRONMENT
# ----------------------------------------------
# Usually set automatically, but you can override:
# NODE_ENV="development"

